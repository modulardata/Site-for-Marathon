type: edu
files:
  - name: src/index.html
    visible: true
    text: |-
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <title>Hello, World!</title>
        <link rel="stylesheet" href="style.css">
      </head>
      <body>
      
      <div class="iframe-container">
        <iframe
            src="https://www.youtube.com/embed/yLGfPNhtS2U?autoplay=1">
        </iframe>
      </div>
      
      <div class="iframe-container">
        <iframe
            src="https://www.meteoblue.com/en/weather/widget/daily/london_united-kingdom_2643743?geoloc=fixed&days=7&tempunit=CELSIUS&windunit=MILE_PER_HOUR&precipunit=MILLIMETER&coloured=coloured&pictoicon=0&pictoicon=1&maxtemperature=0&maxtemperature=1&mintemperature=0&mintemperature=1&windspeed=0&windspeed=1&windgust=0&winddirection=0&winddirection=1&uv=0&humidity=0&precipitation=0&precipitation=1&precipitationprobability=0&precipitationprobability=1&spot=0&spot=1&pressure=0&layout=light"
            frameborder="0" scrolling="NO" allowtransparency="true" sandbox="allow-same-origin allow-scripts allow-popups allow-popups-to-escape-sandbox"
            style="width: 378px; height: 420px">
        </iframe>
      </div>
      </body>
      </html>
    learner_created: false
  - name: src/style.css
    visible: true
    text: |+
      body {
          margin: 0;
          padding: 0;
      }
      
      #youtube-iframe {
          width: 100%;
          height: 80%;
      }
      
      #meteoblue-iframe {
          width: 100%;
         ;
      }
    
    learner_created: false
  - name: test/test.js
    visible: false
    text: |
      import path from 'path';
      
      const pagePath = path.join(import.meta.url, '../../src/index.html');
      import {StageTest, correct, wrong} from 'hs-test-web';
      
      class Test extends StageTest {
        page = this.getPage(pagePath);
      
        tests = [
          // Test 1 - check iframes still exist
          this.page.execute(() => {
            const youtubeIframe = document.querySelector('.iframe-container iframe[src*="youtube"]');
            const weatherIframe = document.querySelector('.iframe-container iframe[src*="meteoblue"]');
      
            return youtubeIframe && weatherIframe ?
              correct() :
              wrong('The page must have iframes with content from YouTube and the weather widget. Each of these iframes must have a parent div with the class .iframe-container');
          }),
      
          // Test 2 - check that there are no indents
          this.page.execute(() => {
            const youtubeIframe = document.querySelector('.iframe-container iframe[src*="youtube"]');
            const weatherIframe = document.querySelector('.iframe-container iframe[src*="meteoblue"]');
            const bodyStyles = window.getComputedStyle(document.body);
            const youtubeIframeStyles = window.getComputedStyle(youtubeIframe);
            const weatherIframeStyles = window.getComputedStyle(weatherIframe);
      
            return bodyStyles?.margin === '0px' && bodyStyles?.padding === '0px'
            && youtubeIframeStyles?.margin === '0px' && youtubeIframeStyles?.padding === '0px'
            && weatherIframeStyles?.margin === '0px' && weatherIframeStyles?.padding === '0px'?
              correct() :
              wrong('Should remove any margin and padding from the body and iframes');
          }),
      
          // Test 3 - check that iframes have 100% width
          this.page.execute(() => {
            const windowWidth = `${window.innerWidth}px`;
            const iframeContainer = document.getElementsByClassName('iframe-container');
            if (!iframeContainer || iframeContainer.length !== 2) {
              return wrong('Make sure there are still 2 iframe-containers on the page');
            }
            const youtubeIframeContainerStyle = window.getComputedStyle(iframeContainer[0]);
            const weatherIframeContainerStyle = window.getComputedStyle(iframeContainer[1]);
      
            return youtubeIframeContainerStyle.width === windowWidth && weatherIframeContainerStyle.width === windowWidth ?
              correct() :
              wrong('Width of both iframes should be set to 100% of the screen width');
          }),
      
          // Test 4 - check youtube iframe height
          this.page.execute(() => {
            const windowHeight = window.innerHeight;
            const youtubeIframe = document.querySelector('.iframe-container iframe[src*="youtube"]');
            const youtubeIframeHeight = Number(window.getComputedStyle(youtubeIframe).height.replace('px', ''));
      
            return Math.round(((youtubeIframeHeight * 100) / windowHeight)) === 80 ?
              correct() :
              wrong('Be sure the height of the YouTube iframe is 80% of screen height');
          }),
      
          // Test 5 - check youtube controls is hidden
          this.page.execute(async () => {
            const youtubeIframe = document.querySelector('.iframe-container iframe[src*="youtube"]');
      
            return youtubeIframe.src.includes('controls=0') ?
              correct() :
              wrong('Hide the controls for YouTube iframe');
          }),
        ]
      }
      
      it("Test stage", async () => {
          await new Test().runTests()
        }
      ).timeout(30000);
    learner_created: false
feedback_link: https://hyperskill.org/projects/362/stages/2145/implement#comment
status: Failed
record: 1
